From f687a01102b23a63840be3cb3aa95f383acc5e86 Mon Sep 17 00:00:00 2001
From: Rafael Kitover <rkitover@gmail.com>
Date: Sat, 2 Mar 2019 16:19:05 -0800
Subject: [PATCH 2/5] config: better libtirpc detection

Improve the autoconf code for finding libtirpc and do not assume the
headers are in /usr/include/tirpc.

Also remove this assumption from the `rpc/xdr.h` header in libspl and
use the same `#include_next` mechanism that is used for other libspl
headers.

Include pkg.m4 from pkg-config in config/ for PKG_CHECK_MODULES(), the
file license allows this.

Include ax_save_flags.m4 and ax_restore_flags.m4 from autoconf-archive,
the file licenses are compatible. Use the 2012 versions so as not rely
on a more recent autoconf feature AS_VAR_COPY(), which breaks some build
slaves.

Add new macro library `config/find_system_library.m4` which defines the
FIND_SYSTEM_LIBRARY() macro which is a convenience wrapper over using
PKG_CHECK_MODULES() with a fallback to standard library locations and
some sanity checks.

The parameters are:

```
FIND_SYSTEM_LIBRARY(VARIABLE-PREFIX, MODULE, HEADER, HEADER-PREFIXES,
    LIBRARY, FUNCTIONS, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
```

`HEADER-PREFIXES` and `FUNCTIONS` are comma-separated m4 lists.

For libtirpc we are using:

```
FIND_SYSTEM_LIBRARY(LIBTIRPC, [libtirpc], [rpc/xdr.h], [tirpc], [tirpc],
    [xdrmem_create], [], [...])
```

The headers are first checked for without the prefixes and then with.

This system works with pkg-config and falls back on checking standard
header/library locations, it can be easily overridden by the user by
setting the `PREFIX_CFLAGS` and `PREFIX_LIBS` variables which are
automatically added to the `./configure --help` output.

Reviewed-by: Brian Behlendorf <behlendorf1@llnl.gov>
Signed-off-by: Rafael Kitover <rkitover@gmail.com>
Closes #7422
Closes #8313
(cherry picked from commit 762f9ef3d9d897b5baf7c91d6e8a7bf371a9b02f)
[ rebased to zfs 0.6 ]
Signed-off-by: Alexander Mikhalitsyn <aleksandr.mikhalitsyn@canonical.com>
---
 config/ax_restore_flags.m4    |  31 ++++
 config/ax_save_flags.m4       |  31 ++++
 config/find_system_library.m4 |  73 +++++++++
 config/pkg.m4                 | 275 ++++++++++++++++++++++++++++++++++
 config/user-libtirpc.m4       |  36 ++---
 configure.ac                  |   1 +
 lib/libnvpair/Makefile.am     |   2 +-
 lib/libspl/Makefile.am        |   4 +-
 lib/libspl/include/rpc/xdr.h  |  13 +-
 9 files changed, 435 insertions(+), 31 deletions(-)
 create mode 100644 config/ax_restore_flags.m4
 create mode 100644 config/ax_save_flags.m4
 create mode 100644 config/find_system_library.m4
 create mode 100644 config/pkg.m4

diff --git a/config/ax_restore_flags.m4 b/config/ax_restore_flags.m4
new file mode 100644
index 000000000..cf03cae79
--- /dev/null
+++ b/config/ax_restore_flags.m4
@@ -0,0 +1,31 @@
+# ===========================================================================
+#     http://www.gnu.org/software/autoconf-archive/ax_restore_flags.html
+# ===========================================================================
+#
+# SYNOPSIS
+#
+#   AX_RESTORE_FLAGS()
+#
+# DESCRIPTION
+#
+#   Restore common compilation flags from temporary variables
+#
+# LICENSE
+#
+#   Copyright (c) 2009 Filippo Giunchedi <filippo@esaurito.net>
+#
+#   Copying and distribution of this file, with or without modification, are
+#   permitted in any medium without royalty provided the copyright notice
+#   and this notice are preserved. This file is offered as-is, without any
+#   warranty.
+
+#serial 3
+
+AC_DEFUN([AX_RESTORE_FLAGS], [
+  CPPFLAGS="${CPPFLAGS_save}"
+  CFLAGS="${CFLAGS_save}"
+  CXXFLAGS="${CXXFLAGS_save}"
+  OBJCFLAGS="${OBJCFLAGS_save}"
+  LDFLAGS="${LDFLAGS_save}"
+  LIBS="${LIBS_save}"
+])
diff --git a/config/ax_save_flags.m4 b/config/ax_save_flags.m4
new file mode 100644
index 000000000..d2a054223
--- /dev/null
+++ b/config/ax_save_flags.m4
@@ -0,0 +1,31 @@
+# ===========================================================================
+#       http://www.gnu.org/software/autoconf-archive/ax_save_flags.html
+# ===========================================================================
+#
+# SYNOPSIS
+#
+#   AX_SAVE_FLAGS()
+#
+# DESCRIPTION
+#
+#   Save common compilation flags into temporary variables
+#
+# LICENSE
+#
+#   Copyright (c) 2009 Filippo Giunchedi <filippo@esaurito.net>
+#
+#   Copying and distribution of this file, with or without modification, are
+#   permitted in any medium without royalty provided the copyright notice
+#   and this notice are preserved. This file is offered as-is, without any
+#   warranty.
+
+#serial 3
+
+AC_DEFUN([AX_SAVE_FLAGS], [
+  CPPFLAGS_save="${CPPFLAGS}"
+  CFLAGS_save="${CFLAGS}"
+  CXXFLAGS_save="${CXXFLAGS}"
+  OBJCFLAGS_save="${OBJCFLAGS}"
+  LDFLAGS_save="${LDFLAGS}"
+  LIBS_save="${LIBS}"
+])
diff --git a/config/find_system_library.m4 b/config/find_system_library.m4
new file mode 100644
index 000000000..9d22bcfab
--- /dev/null
+++ b/config/find_system_library.m4
@@ -0,0 +1,73 @@
+# find_system_lib.m4 - Macros to search for a system library.   -*- Autoconf -*-
+
+dnl requires pkg.m4 from pkg-config
+dnl requires ax_save_flags.m4 from autoconf-archive
+dnl requires ax_restore_flags.m4 from autoconf-archive
+
+dnl FIND_SYSTEM_LIBRARY(VARIABLE-PREFIX, MODULE, HEADER, HEADER-PREFIXES, LIBRARY, FUNCTIONS, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+
+AC_DEFUN([FIND_SYSTEM_LIBRARY], [
+    AC_REQUIRE([PKG_PROG_PKG_CONFIG])
+
+    _library_found=
+
+    PKG_CHECK_MODULES([$1], [$2], [_library_found=1], [
+        AS_IF([test -f /usr/include/[$3]], [
+            AC_SUBST([$1][_CFLAGS], [])
+            AC_SUBST([$1][_LIBS], ["-l[$5]]")
+            _library_found=1
+        ],[ AS_IF([test -f /usr/local/include/[$3]], [
+            AC_SUBST([$1][_CFLAGS], ["-I/usr/local/include"])
+            AC_SUBST([$1][_LIBS], ["-L/usr/local -l[$5]]")
+            _library_found=1
+        ],[dnl ELSE
+            m4_foreach([prefix], [$4], [
+                AS_IF([test "x$_library_found" != "x1"], [
+                    AS_IF([test -f [/usr/include/]prefix[/][$3]], [
+                        AC_SUBST([$1][_CFLAGS], ["[-I/usr/include/]prefix["]])
+                        AC_SUBST([$1][_LIBS], ["-l[$5]]")
+                        _library_found=1
+                    ],[ AS_IF([test -f [/usr/local/include/]prefix[/][$3]], [
+                        AC_SUBST([$1][_CFLAGS], ["[-I/usr/local/include/]prefix["]])
+                        AC_SUBST([$1][_LIBS], ["-L/usr/local -l[$5]"])
+                        _library_found=1
+                    ])])
+                ])
+            ])
+        ])])
+
+        AS_IF([test -z "$_library_found"], [
+            AC_MSG_WARN([cannot find [$2] via pkg-config or in the standard locations])
+        ])
+    ])
+
+    dnl do some further sanity checks
+
+    AS_IF([test -n "$_library_found"], [
+        AX_SAVE_FLAGS
+
+        CPPFLAGS="$CPPFLAGS $(echo $[$1][_CFLAGS] | sed 's/-include */-include-/g; s/^/ /; s/ [^-][^ ]*//g; s/ -[^Ii][^ ]*//g; s/-include-/-include /g; s/^ //;')"
+        CFLAGS="$CFLAGS $[$1][_CFLAGS]"
+        LDFLAGS="$LDFLAGS $[$1][_LIBS]"
+
+        AC_CHECK_HEADER([$3], [], [
+            AC_MSG_WARN([header [$3] for library [$2] is not usable])
+            _library_found=
+        ])
+
+        m4_foreach([func], [$6], [
+            AC_CHECK_LIB([$5], func, [], [
+                AC_MSG_WARN([cannot find ]func[ in library [$5]])
+                _library_found=
+            ])
+        ])
+        
+        AX_RESTORE_FLAGS
+    ])
+
+    AS_IF([test -n "$_library_found"], [
+        :;$7
+    ],[dnl ELSE
+        :;$8
+    ])
+])
diff --git a/config/pkg.m4 b/config/pkg.m4
new file mode 100644
index 000000000..13a889017
--- /dev/null
+++ b/config/pkg.m4
@@ -0,0 +1,275 @@
+# pkg.m4 - Macros to locate and utilise pkg-config.   -*- Autoconf -*-
+# serial 12 (pkg-config-0.29.2)
+
+dnl Copyright © 2004 Scott James Remnant <scott@netsplit.com>.
+dnl Copyright © 2012-2015 Dan Nicholson <dbn.lists@gmail.com>
+dnl
+dnl This program is free software; you can redistribute it and/or modify
+dnl it under the terms of the GNU General Public License as published by
+dnl the Free Software Foundation; either version 2 of the License, or
+dnl (at your option) any later version.
+dnl
+dnl This program is distributed in the hope that it will be useful, but
+dnl WITHOUT ANY WARRANTY; without even the implied warranty of
+dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
+dnl General Public License for more details.
+dnl
+dnl You should have received a copy of the GNU General Public License
+dnl along with this program; if not, write to the Free Software
+dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
+dnl 02111-1307, USA.
+dnl
+dnl As a special exception to the GNU General Public License, if you
+dnl distribute this file as part of a program that contains a
+dnl configuration script generated by Autoconf, you may include it under
+dnl the same distribution terms that you use for the rest of that
+dnl program.
+
+dnl PKG_PREREQ(MIN-VERSION)
+dnl -----------------------
+dnl Since: 0.29
+dnl
+dnl Verify that the version of the pkg-config macros are at least
+dnl MIN-VERSION. Unlike PKG_PROG_PKG_CONFIG, which checks the user's
+dnl installed version of pkg-config, this checks the developer's version
+dnl of pkg.m4 when generating configure.
+dnl
+dnl To ensure that this macro is defined, also add:
+dnl m4_ifndef([PKG_PREREQ],
+dnl     [m4_fatal([must install pkg-config 0.29 or later before running autoconf/autogen])])
+dnl
+dnl See the "Since" comment for each macro you use to see what version
+dnl of the macros you require.
+m4_defun([PKG_PREREQ],
+[m4_define([PKG_MACROS_VERSION], [0.29.2])
+m4_if(m4_version_compare(PKG_MACROS_VERSION, [$1]), -1,
+    [m4_fatal([pkg.m4 version $1 or higher is required but ]PKG_MACROS_VERSION[ found])])
+])dnl PKG_PREREQ
+
+dnl PKG_PROG_PKG_CONFIG([MIN-VERSION])
+dnl ----------------------------------
+dnl Since: 0.16
+dnl
+dnl Search for the pkg-config tool and set the PKG_CONFIG variable to
+dnl first found in the path. Checks that the version of pkg-config found
+dnl is at least MIN-VERSION. If MIN-VERSION is not specified, 0.9.0 is
+dnl used since that's the first version where most current features of
+dnl pkg-config existed.
+AC_DEFUN([PKG_PROG_PKG_CONFIG],
+[m4_pattern_forbid([^_?PKG_[A-Z_]+$])
+m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
+m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
+AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
+AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
+AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])
+
+if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
+	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
+fi
+if test -n "$PKG_CONFIG"; then
+	_pkg_min_version=m4_default([$1], [0.9.0])
+	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
+	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
+		AC_MSG_RESULT([yes])
+	else
+		AC_MSG_RESULT([no])
+		PKG_CONFIG=""
+	fi
+fi[]dnl
+])dnl PKG_PROG_PKG_CONFIG
+
+dnl PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+dnl -------------------------------------------------------------------
+dnl Since: 0.18
+dnl
+dnl Check to see whether a particular set of modules exists. Similar to
+dnl PKG_CHECK_MODULES(), but does not set variables or print errors.
+dnl
+dnl Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])
+dnl only at the first occurence in configure.ac, so if the first place
+dnl it's called might be skipped (such as if it is within an "if", you
+dnl have to call PKG_CHECK_EXISTS manually
+AC_DEFUN([PKG_CHECK_EXISTS],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+if test -n "$PKG_CONFIG" && \
+    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
+  m4_default([$2], [:])
+m4_ifvaln([$3], [else
+  $3])dnl
+fi])
+
+dnl _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])
+dnl ---------------------------------------------
+dnl Internal wrapper calling pkg-config via PKG_CONFIG and setting
+dnl pkg_failed based on the result.
+m4_define([_PKG_CONFIG],
+[if test -n "$$1"; then
+    pkg_cv_[]$1="$$1"
+ elif test -n "$PKG_CONFIG"; then
+    PKG_CHECK_EXISTS([$3],
+                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 "$3" 2>/dev/null`
+		      test "x$?" != "x0" && pkg_failed=yes ],
+		     [pkg_failed=yes])
+ else
+    pkg_failed=untried
+fi[]dnl
+])dnl _PKG_CONFIG
+
+dnl _PKG_SHORT_ERRORS_SUPPORTED
+dnl ---------------------------
+dnl Internal check to see if pkg-config supports short errors.
+AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])
+if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
+        _pkg_short_errors_supported=yes
+else
+        _pkg_short_errors_supported=no
+fi[]dnl
+])dnl _PKG_SHORT_ERRORS_SUPPORTED
+
+
+dnl PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
+dnl   [ACTION-IF-NOT-FOUND])
+dnl --------------------------------------------------------------
+dnl Since: 0.4.0
+dnl
+dnl Note that if there is a possibility the first call to
+dnl PKG_CHECK_MODULES might not happen, you should be sure to include an
+dnl explicit call to PKG_PROG_PKG_CONFIG in your configure.ac
+AC_DEFUN([PKG_CHECK_MODULES],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
+AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl
+
+pkg_failed=no
+AC_MSG_CHECKING([for $2])
+
+_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
+_PKG_CONFIG([$1][_LIBS], [libs], [$2])
+
+m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
+and $1[]_LIBS to avoid the need to call pkg-config.
+See the pkg-config man page for more details.])
+
+if test $pkg_failed = yes; then
+        AC_MSG_RESULT([no])
+        _PKG_SHORT_ERRORS_SUPPORTED
+        if test $_pkg_short_errors_supported = yes; then
+	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
+        else
+	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
+        fi
+	# Put the nasty error message in config.log where it belongs
+	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD
+
+	m4_default([$4], [AC_MSG_ERROR(
+[Package requirements ($2) were not met:
+
+$$1_PKG_ERRORS
+
+Consider adjusting the PKG_CONFIG_PATH environment variable if you
+installed software in a non-standard prefix.
+
+_PKG_TEXT])[]dnl
+        ])
+elif test $pkg_failed = untried; then
+        AC_MSG_RESULT([no])
+	m4_default([$4], [AC_MSG_FAILURE(
+[The pkg-config script could not be found or is too old.  Make sure it
+is in your PATH or set the PKG_CONFIG environment variable to the full
+path to pkg-config.
+
+_PKG_TEXT
+
+To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
+        ])
+else
+	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
+	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
+        AC_MSG_RESULT([yes])
+	$3
+fi[]dnl
+])dnl PKG_CHECK_MODULES
+
+
+dnl PKG_CHECK_MODULES_STATIC(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
+dnl   [ACTION-IF-NOT-FOUND])
+dnl ---------------------------------------------------------------------
+dnl Since: 0.29
+dnl
+dnl Checks for existence of MODULES and gathers its build flags with
+dnl static libraries enabled. Sets VARIABLE-PREFIX_CFLAGS from --cflags
+dnl and VARIABLE-PREFIX_LIBS from --libs.
+dnl
+dnl Note that if there is a possibility the first call to
+dnl PKG_CHECK_MODULES_STATIC might not happen, you should be sure to
+dnl include an explicit call to PKG_PROG_PKG_CONFIG in your
+dnl configure.ac.
+AC_DEFUN([PKG_CHECK_MODULES_STATIC],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+_save_PKG_CONFIG=$PKG_CONFIG
+PKG_CONFIG="$PKG_CONFIG --static"
+PKG_CHECK_MODULES($@)
+PKG_CONFIG=$_save_PKG_CONFIG[]dnl
+])dnl PKG_CHECK_MODULES_STATIC
+
+
+dnl PKG_INSTALLDIR([DIRECTORY])
+dnl -------------------------
+dnl Since: 0.27
+dnl
+dnl Substitutes the variable pkgconfigdir as the location where a module
+dnl should install pkg-config .pc files. By default the directory is
+dnl $libdir/pkgconfig, but the default can be changed by passing
+dnl DIRECTORY. The user can override through the --with-pkgconfigdir
+dnl parameter.
+AC_DEFUN([PKG_INSTALLDIR],
+[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
+m4_pushdef([pkg_description],
+    [pkg-config installation directory @<:@]pkg_default[@:>@])
+AC_ARG_WITH([pkgconfigdir],
+    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
+    [with_pkgconfigdir=]pkg_default)
+AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
+m4_popdef([pkg_default])
+m4_popdef([pkg_description])
+])dnl PKG_INSTALLDIR
+
+
+dnl PKG_NOARCH_INSTALLDIR([DIRECTORY])
+dnl --------------------------------
+dnl Since: 0.27
+dnl
+dnl Substitutes the variable noarch_pkgconfigdir as the location where a
+dnl module should install arch-independent pkg-config .pc files. By
+dnl default the directory is $datadir/pkgconfig, but the default can be
+dnl changed by passing DIRECTORY. The user can override through the
+dnl --with-noarch-pkgconfigdir parameter.
+AC_DEFUN([PKG_NOARCH_INSTALLDIR],
+[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
+m4_pushdef([pkg_description],
+    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
+AC_ARG_WITH([noarch-pkgconfigdir],
+    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
+    [with_noarch_pkgconfigdir=]pkg_default)
+AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
+m4_popdef([pkg_default])
+m4_popdef([pkg_description])
+])dnl PKG_NOARCH_INSTALLDIR
+
+
+dnl PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,
+dnl [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
+dnl -------------------------------------------
+dnl Since: 0.28
+dnl
+dnl Retrieves the value of the pkg-config variable for the given module.
+AC_DEFUN([PKG_CHECK_VAR],
+[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
+AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl
+
+_PKG_CONFIG([$1], [variable="][$3]["], [$2])
+AS_VAR_COPY([$1], [pkg_cv_][$1])
+
+AS_VAR_IF([$1], [""], [$5], [$4])dnl
+])dnl PKG_CHECK_VAR
diff --git a/config/user-libtirpc.m4 b/config/user-libtirpc.m4
index 5f929061f..19c02c9d5 100644
--- a/config/user-libtirpc.m4
+++ b/config/user-libtirpc.m4
@@ -4,27 +4,27 @@ dnl #
 AC_DEFUN([ZFS_AC_CONFIG_USER_LIBTIRPC], [
 	AC_ARG_WITH([tirpc],
 	    [AS_HELP_STRING([--with-tirpc],
-	        [use tirpc for xdr encoding @<:@default=check@:>@])],
+		[use tirpc for xdr encoding @<:@default=check@:>@])],
 	    [],
 	    [with_tirpc=check])
 
-	LIBTIRPC=
-	LIBTIRPC_CFLAGS=
+	have_xdr=
 
-	AS_IF([test "x$with_tirpc" != xno],
-	    [AC_CHECK_LIB([tirpc], [xdrmem_create],
-		[AC_SUBST([LIBTIRPC], [-ltirpc])
-		 AC_SUBST([LIBTIRPC_CFLAGS], [-I/usr/include/tirpc])
-		 AC_DEFINE([HAVE_LIBTIRPC], [1], [Define if you have libtirpc])
-		],
-		[if test "x$with_tirpc" != xcheck; then
-		    AC_MSG_FAILURE(
-			[--with-tirpc was given, but test for tirpc failed])
-		 fi
-		AC_SEARCH_LIBS([xdrmem_create], [tirpc], [], [
-		    AC_MSG_FAILURE([xdrmem_create() requires tirpc or libc])])
-		])],
-	    [AC_SEARCH_LIBS([xdrmem_create], [tirpc], [], [
-		AC_MSG_FAILURE([xdrmem_create() requires libc])])
+        AS_IF([test "x$with_tirpc" != "xyes"], [
+	    AC_SEARCH_LIBS([xdrmem_create], [], [have_xdr=1], [
+		AS_IF([test "x$with_tirpc" = "xno"], [
+		    AC_MSG_FAILURE([xdrmem_create() requires sunrpc support in libc if not using libtirpc])
+		])
 	    ])
+        ])
+
+	AS_IF([test "x$have_xdr" = "x"], [
+            FIND_SYSTEM_LIBRARY(LIBTIRPC, [libtirpc], [rpc/xdr.h], [tirpc], [tirpc], [xdrmem_create], [], [
+		AS_IF([test "x$with_tirpc" = "xyes"], [
+		    AC_MSG_FAILURE([--with-tirpc was given, but libtirpc is not available, try installing libtirpc-devel])
+		],[dnl ELSE
+		    AC_MSG_FAILURE([neither libc sunrpc support nor libtirpc is available, try installing libtirpc-devel])
+		])
+	    ])
+	])
 ])
diff --git a/configure.ac b/configure.ac
index 9907857e2..dc9df1560 100644
--- a/configure.ac
+++ b/configure.ac
@@ -48,6 +48,7 @@ AC_CONFIG_HEADERS([zfs_config.h], [
 AC_PROG_INSTALL
 AC_PROG_CC
 AC_PROG_LIBTOOL
+PKG_PROG_PKG_CONFIG
 AM_PROG_AS
 
 ZFS_AC_LICENSE
diff --git a/lib/libnvpair/Makefile.am b/lib/libnvpair/Makefile.am
index 2833557a3..02e0a3b83 100644
--- a/lib/libnvpair/Makefile.am
+++ b/lib/libnvpair/Makefile.am
@@ -27,7 +27,7 @@ nodist_libnvpair_la_SOURCES = \
 
 libnvpair_la_LIBADD = \
 	$(top_builddir)/lib/libuutil/libuutil.la \
-	$(LIBTIRPC)
+	$(LIBTIRPC_LIBS)
 libnvpair_la_LDFLAGS = -version-info 1:1:0
 
 EXTRA_DIST = $(USER_C)
diff --git a/lib/libspl/Makefile.am b/lib/libspl/Makefile.am
index afd64fcca..e941c26c8 100644
--- a/lib/libspl/Makefile.am
+++ b/lib/libspl/Makefile.am
@@ -12,6 +12,8 @@ DIST_SUBDIRS = include asm-generic asm-i386 asm-x86_64
 DEFAULT_INCLUDES += \
 	-I$(top_srcdir)/lib/libspl/include
 
+AM_CFLAGS += $(LIBTIRPC_CFLAGS)
+
 AM_CCASFLAGS = \
 	-I$(top_srcdir)/lib/libspl/include
 
@@ -41,6 +43,6 @@ nodist_libspl_la_SOURCES = \
 	$(USER_ASM) \
 	$(KERNEL_C)
 
-libspl_la_LIBADD = -lrt
+libspl_la_LIBADD = -lrt $(LIBTIRPC_LIBS)
 
 EXTRA_DIST = $(USER_C)
diff --git a/lib/libspl/include/rpc/xdr.h b/lib/libspl/include/rpc/xdr.h
index 3c7c53fcc..27e4395c7 100644
--- a/lib/libspl/include/rpc/xdr.h
+++ b/lib/libspl/include/rpc/xdr.h
@@ -32,21 +32,12 @@
 #ifndef LIBSPL_RPC_XDR_H
 #define	LIBSPL_RPC_XDR_H
 
-/*
- * When available prefer libtirpc for xdr functionality.  This library is
- * mandatory when compiling with musl libc because it does not provide xdr.
- */
-#if defined(HAVE_LIBTIRPC)
+#include_next <rpc/xdr.h>
 
-#include <tirpc/rpc/xdr.h>
-#ifdef xdr_control
+#ifdef xdr_control /* if e.g. using tirpc */
 #undef xdr_control
 #endif
 
-#else
-#include_next <rpc/xdr.h>
-#endif /* HAVE_LIBTIRPC */
-
 #define	XDR_GET_BYTES_AVAIL 1
 
 typedef struct xdr_bytesrec {
-- 
2.34.1

